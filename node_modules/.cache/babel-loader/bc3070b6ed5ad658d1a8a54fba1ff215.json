{"ast":null,"code":"var _jsxFileName = \"/Users/vijaysingh/ReactJS/nskart/src/page/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react'; // import { useNavigate } from 'react-router';\n\nimport { Navigate } from 'react-router-dom';\nimport Login from '../component/Authentication/Login';\nimport ContextData from '../context/MainContext';\nimport Cookies from 'universal-cookie';\nimport Header from '../component/Header';\nimport Footer from '../component/Footer';\nimport { useMediaQuery } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nconst LoginPage = props => {\n  _s();\n\n  const data = useContext(ContextData);\n  const [toggle, setToggle] = useState(true);\n  const [isNotSmallerScreen] = useMediaQuery(\"(min-width:1024px)\"); // const navigate = useNavigate();\n  // console.log()\n\n  if (data.auth.isUserLogin || cookies.get(\"isUserLogin\")) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!isNotSmallerScreen && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Login, {\n        toggle: toggle,\n        setToggle: setToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(LoginPage, \"CiN+6DcGatLsKCclAUzW3Y5EMEs=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/vijaysingh/ReactJS/nskart/src/page/LoginPage.js"],"names":["React","useContext","useState","Navigate","Login","ContextData","Cookies","Header","Footer","useMediaQuery","cookies","LoginPage","props","data","toggle","setToggle","isNotSmallerScreen","auth","isUserLogin","get"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C,C,CACA;;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;;AAEA,MAAMK,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAMC,IAAI,GAAGZ,UAAU,CAACI,WAAD,CAAvB;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACc,kBAAD,IAAuBP,aAAa,CAAC,oBAAD,CAA1C,CAJyB,CAMzB;AAEA;;AAEA,MAAII,IAAI,CAACI,IAAL,CAAUC,WAAV,IAAyBR,OAAO,CAACS,GAAR,CAAY,aAAZ,CAA7B,EAAyD;AACrD,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBACI;AAAA,iBACK,CAACH,kBAAD,iBAAuB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAD5B,eAEI,QAAC,KAAD;AAAO,QAAA,MAAM,EAAEF,MAAf;AAAuB,QAAA,SAAS,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAOH;AAEJ,CAtBD;;GAAMJ,S;UAI2BF,a;;;KAJ3BE,S;AAwBN,eAAeA,SAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\n// import { useNavigate } from 'react-router';\r\nimport { Navigate } from 'react-router-dom';\r\nimport Login from '../component/Authentication/Login';\r\nimport ContextData from '../context/MainContext';\r\nimport Cookies from 'universal-cookie';\r\nimport Header from '../component/Header';\r\nimport Footer from '../component/Footer';\r\nimport { useMediaQuery } from '@chakra-ui/react';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const data = useContext(ContextData);\r\n    const [toggle, setToggle] = useState(true);\r\n    const [isNotSmallerScreen] = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n    // const navigate = useNavigate();\r\n\r\n    // console.log()\r\n\r\n    if (data.auth.isUserLogin || cookies.get(\"isUserLogin\")) {\r\n        return <Navigate to=\"/\" />\r\n    } else {\r\n        return (\r\n            <>\r\n                {!isNotSmallerScreen && <Header />}\r\n                <Login toggle={toggle} setToggle={setToggle} />\r\n                {/* <Footer /> */}\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}